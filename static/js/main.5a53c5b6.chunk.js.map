{"version":3,"sources":["actions/actionTypes.js","App.js","reducers/auth.js","reducers/index.js","index.js"],"names":["LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","App","props","console","log","className","React","Component","connect","store","ownProps","dispatch","loginStart","type","loginFail","error","initalAuthState","isLoggedIn","inProgress","user","authReducer","state","action","initialRootState","auth","newsFeeds","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NACaA,EAAc,cAEdC,EAAgB,gBAEhBC,EAAa,a,OCApBC,E,kDACJ,WAAYC,GAAO,OAAC,oBAClBC,QAAQC,IAAI,WAAYF,GADP,YAEXA,G,0CAGR,WACE,OACE,cAAC,IAAD,UACE,qBAAKG,UAAU,MAAf,SACE,uD,GAVQC,IAAMC,WAgCTC,eAfS,SAACC,EAAOC,GAC9B,MAAO,CACLD,QACAC,eAIQ,SAACC,GACX,MAAO,CACLC,WAAY,kBAAMD,EAAS,CAAEE,KAAMf,KACnCgB,UAAW,kBACTH,EAAS,CAAEE,KAAMb,EAAYe,MAAO,8BAI3BP,CAA8BP,G,wCClCvCe,EAAkB,CACtBC,YAAY,EACZC,YAAY,EACZC,KAAM,GACNJ,MAAO,MAGM,SAASK,IAA8C,IAAlCC,EAAiC,uDAAzBL,EAAiBM,EAAQ,uCACnE,OAAQA,EAAOT,MACb,KAAKf,EACH,OAAO,2BACFuB,GADL,IAEEH,YAAY,IAEhB,KAAKnB,EACH,OAAO,2BACFsB,GADL,IAEEJ,YAAY,EACZC,YAAY,EACZC,KAAMG,EAAOH,KACbJ,MAAO,OAEX,KAAKf,EACH,OAAO,2BACFqB,GADL,IAEEH,YAAY,EACZH,MAAOO,EAAOP,QAElB,QACE,OAAOM,GC7Bb,IAAME,EAAmB,CACvBC,KAAM,CACJP,YAAY,EACZC,YAAY,EACZC,KAAM,GACNJ,MAAO,MAETU,UAAW,ICcb,IAAMhB,EAAQiB,aDXC,WAAwD,IAAnCL,EAAkC,uDAA1BE,EAAkBD,EAAQ,uCACpE,OAAO,2BACFD,GADL,IAEEG,KAAMJ,EAAYC,EAAMG,KAAMF,OCQKK,YAAgBC,IAAOC,MAE9DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvB,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJwB,SAASC,eAAe,W","file":"static/js/main.5a53c5b6.chunk.js","sourcesContent":["// auth actions\r\nexport const LOGIN_START = \"LOGIN_START\";\r\n\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\n\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { LOGIN_FAIL, LOGIN_START } from \"./actions/actionTypes\";\n\nclass App extends React.Component {\n  constructor(props) {\n    console.log(\"PROPS:: \", props);\n    super(props);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <h1>App Component</h1>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (store, ownProps) => {\n  return {\n    store,\n    ownProps,\n  };\n};\n\nconst mdp = (dispatch) => {\n  return {\n    loginStart: () => dispatch({ type: LOGIN_START }),\n    loginFail: () =>\n      dispatch({ type: LOGIN_FAIL, error: \"ERROR:: NO ERROR CODE\" }),\n  };\n};\n\nexport default connect(mapStateToProps, mdp)(App);\n","// auth reducer\r\nimport { LOGIN_START, LOGIN_SUCCESS, LOGIN_FAIL } from \"../actions/actionTypes\";\r\n\r\nconst initalAuthState = {\r\n  isLoggedIn: false,\r\n  inProgress: false,\r\n  user: {},\r\n  error: null,\r\n};\r\n\r\nexport default function authReducer(state = initalAuthState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_START:\r\n      return {\r\n        ...state,\r\n        inProgress: true,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        inProgress: false,\r\n        user: action.user,\r\n        error: null,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        inProgress: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import authReducer from \"./auth\";\r\n\r\n// root reducer\r\nconst initialRootState = {\r\n  auth: {\r\n    isLoggedIn: false,\r\n    inProgress: false,\r\n    user: {},\r\n    error: null,\r\n  },\r\n  newsFeeds: [],\r\n};\r\n\r\nexport default function rootReducer(state = initialRootState, action) {\r\n  return {\r\n    ...state,\r\n    auth: authReducer(state.auth, action),\r\n  };\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n//\nimport { Provider } from \"react-redux\";\n\nimport rootReducer from \"./reducers\";\n\n// const thunk =\n//   ({ dispatch, getState }) =>\n//   (next) =>\n//   (action) => {\n//     if (typeof action === \"function\") {\n//       action(dispatch);\n//       return;\n//     }\n\n//     next(action);\n//   };\n\nconst store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}